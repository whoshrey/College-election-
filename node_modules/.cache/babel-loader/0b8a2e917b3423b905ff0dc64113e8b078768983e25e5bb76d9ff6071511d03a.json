{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreya\\\\Videos\\\\clgElection\\\\src\\\\components\\\\StudentLogin.js\",\n  _s = $RefreshSig$();\n// src/components/StudentLogin.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { collection, addDoc, query, where, getDocs, updateDoc, doc } from \"firebase/firestore\";\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentLogin() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otp, setOtp] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    emailjs.init(\"5W5A5iIpAjJ2OzR6a\"); // Replace with your EmailJS User ID\n  }, []);\n  const generateOTP = () => {\n    return Math.floor(100000 + Math.random() * 900000).toString();\n  };\n  const handleRequestOTP = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    if (!email) {\n      setError('Please enter your email address');\n      setLoading(false);\n      return;\n    }\n    try {\n      // Verify if student email exists in database\n      const studentsRef = collection(db, 'students');\n      const q = query(studentsRef, where(\"email\", \"==\", email));\n      const querySnapshot = await getDocs(q);\n      if (querySnapshot.empty) {\n        setError('Email not registered. Please contact administrator.');\n        setLoading(false);\n        return;\n      }\n\n      // Generate OTP and store it\n      const generatedOTP = generateOTP();\n      await addDoc(collection(db, 'otps'), {\n        email: email,\n        otp: generatedOTP,\n        createdAt: new Date(),\n        used: false\n      });\n\n      // Send email using EmailJS\n      await emailjs.send('service_whag3zs',\n      // Replace with your Service ID\n      'template_i5zkhfl',\n      // Replace with your Template ID\n      {\n        to_email: email,\n        otp: generatedOTP\n      }, '5W5A5iIpAjJ2OzR6a' // Replace with your User ID\n      );\n      setOtpSent(true);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error generating OTP: \", error);\n      setError('Failed to send OTP. Please try again.');\n      setLoading(false);\n    }\n  };\n  const verifyOTP = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      // Verify OTP against stored OTPs\n      const otpsRef = collection(db, 'otps');\n      const q = query(otpsRef, where(\"email\", \"==\", email), where(\"otp\", \"==\", otp), where(\"used\", \"==\", false));\n      const querySnapshot = await getDocs(q);\n      if (querySnapshot.empty) {\n        setError('Invalid OTP. Please try again.');\n        setLoading(false);\n        return;\n      }\n\n      // Set OTP as used\n      const otpDoc = querySnapshot.docs[0];\n      await updateDoc(doc(db, 'otps', otpDoc.id), {\n        used: true\n      });\n\n      // Store student session info\n      localStorage.setItem('studentEmail', email);\n\n      // Navigate to student dashboard or profile\n      navigate('/student/profile');\n    } catch (error) {\n      console.error(\"Error verifying OTP: \", error);\n      setError('Failed to verify OTP. Please try again.');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !otpSent ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRequestOTP,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"block text-gray-700 text-sm font-medium mb-2\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-red-500 text-sm text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors\",\n        disabled: loading,\n        children: loading ? 'Sending...' : 'Request OTP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: verifyOTP,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-600 mb-4\",\n          children: [\"We've sent an OTP to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"otp\",\n          className: \"block text-gray-700 text-sm font-medium mb-2\",\n          children: \"Enter OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"otp\",\n          type: \"text\",\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n          maxLength: \"6\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-red-500 text-sm text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors\",\n        disabled: loading,\n        children: loading ? 'Verifying...' : 'Verify OTP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"text-blue-600 hover:text-blue-800 text-sm\",\n          onClick: () => setOtpSent(false),\n          children: \"Change Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentLogin, \"giyqATTjcdPzFhFBvogL683b1hQ=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentLogin;\nexport default StudentLogin;\nvar _c;\n$RefreshReg$(_c, \"StudentLogin\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","db","collection","addDoc","query","where","getDocs","updateDoc","doc","emailjs","jsxDEV","_jsxDEV","StudentLogin","_s","email","setEmail","loading","setLoading","error","setError","otpSent","setOtpSent","otp","setOtp","navigate","init","generateOTP","Math","floor","random","toString","handleRequestOTP","e","preventDefault","studentsRef","q","querySnapshot","empty","generatedOTP","createdAt","Date","used","send","to_email","console","verifyOTP","otpsRef","otpDoc","docs","id","localStorage","setItem","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","disabled","maxLength","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shreya/Videos/clgElection/src/components/StudentLogin.js"],"sourcesContent":["// src/components/StudentLogin.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { db } from '../firebase';\r\nimport { collection, addDoc, query, where, getDocs, updateDoc, doc } from \"firebase/firestore\";\r\nimport emailjs from 'emailjs-com';\r\n\r\nfunction StudentLogin() {\r\n  const [email, setEmail] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [otp, setOtp] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    emailjs.init(\"5W5A5iIpAjJ2OzR6a\"); // Replace with your EmailJS User ID\r\n  }, []);\r\n\r\n  const generateOTP = () => {\r\n    return Math.floor(100000 + Math.random() * 900000).toString();\r\n  };\r\n\r\n  const handleRequestOTP = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    if (!email) {\r\n      setError('Please enter your email address');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Verify if student email exists in database\r\n      const studentsRef = collection(db, 'students');\r\n      const q = query(studentsRef, where(\"email\", \"==\", email));\r\n      const querySnapshot = await getDocs(q);\r\n      \r\n      if (querySnapshot.empty) {\r\n        setError('Email not registered. Please contact administrator.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Generate OTP and store it\r\n      const generatedOTP = generateOTP();\r\n      await addDoc(collection(db, 'otps'), {\r\n        email: email,\r\n        otp: generatedOTP,\r\n        createdAt: new Date(),\r\n        used: false\r\n      });\r\n      \r\n      // Send email using EmailJS\r\n      await emailjs.send(\r\n        'service_whag3zs',  // Replace with your Service ID\r\n        'template_i5zkhfl', // Replace with your Template ID\r\n        {\r\n          to_email: email,\r\n          otp: generatedOTP\r\n        },\r\n        '5W5A5iIpAjJ2OzR6a'      // Replace with your User ID\r\n      );\r\n      \r\n      setOtpSent(true);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error generating OTP: \", error);\r\n      setError('Failed to send OTP. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const verifyOTP = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Verify OTP against stored OTPs\r\n      const otpsRef = collection(db, 'otps');\r\n      const q = query(\r\n        otpsRef, \r\n        where(\"email\", \"==\", email),\r\n        where(\"otp\", \"==\", otp),\r\n        where(\"used\", \"==\", false)\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n      \r\n      if (querySnapshot.empty) {\r\n        setError('Invalid OTP. Please try again.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Set OTP as used\r\n      const otpDoc = querySnapshot.docs[0];\r\n      await updateDoc(doc(db, 'otps', otpDoc.id), {\r\n        used: true\r\n      });\r\n      \r\n      // Store student session info\r\n      localStorage.setItem('studentEmail', email);\r\n      \r\n      // Navigate to student dashboard or profile\r\n      navigate('/student/profile');\r\n    } catch (error) {\r\n      console.error(\"Error verifying OTP: \", error);\r\n      setError('Failed to verify OTP. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!otpSent ? (\r\n        <form onSubmit={handleRequestOTP}>\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Email Address\r\n            </label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          {error && (\r\n            <div className=\"mb-4 text-red-500 text-sm text-center\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Sending...' : 'Request OTP'}\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <form onSubmit={verifyOTP}>\r\n          <div className=\"mb-4\">\r\n            <p className=\"text-center text-gray-600 mb-4\">\r\n              We've sent an OTP to <strong>{email}</strong>\r\n            </p>\r\n            <label htmlFor=\"otp\" className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Enter OTP\r\n            </label>\r\n            <input\r\n              id=\"otp\"\r\n              type=\"text\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              maxLength=\"6\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          {error && (\r\n            <div className=\"mb-4 text-red-500 text-sm text-center\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Verifying...' : 'Verify OTP'}\r\n          </button>\r\n          \r\n          <div className=\"mt-4 text-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"text-blue-600 hover:text-blue-800 text-sm\"\r\n              onClick={() => setOtpSent(false)}\r\n            >\r\n              Change Email\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentLogin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}