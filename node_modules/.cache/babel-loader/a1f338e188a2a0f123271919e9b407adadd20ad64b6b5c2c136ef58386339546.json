{"ast":null,"code":"/**\r\n * react-router v7.4.0\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\nimport { FrameworkContext, RemixErrorBoundary, RouterProvider, createBrowserHistory, createClientRoutes, createClientRoutesWithHMRRevalidationOptOut, createRouter, decodeViaTurboStream, deserializeErrors, getPatchRoutesOnNavigationFunction, getSingleFetchDataStrategy, invariant, mapRouteProperties, matchRoutes, shouldHydrateRouteLoader, useFogOFWarDiscovery } from \"./chunk-GNGMS2XR.mjs\";\n\n// lib/dom-export/dom-router-provider.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */React.createElement(RouterProvider, {\n    flushSync: ReactDOM.flushSync,\n    ...props\n  });\n}\n\n// lib/dom-export/hydrated-router.tsx\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter(_ref) {\n  let {\n    unstable_getContext\n  } = _ref;\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\");\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then(value => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch(e => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(ssrInfo.manifest.routes, ssrInfo.routeModules, ssrInfo.context.state, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  let hydrationData = void 0;\n  let loaderData = ssrInfo.context.state.loaderData;\n  if (ssrInfo.context.isSpaMode) {\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = {\n      ...ssrInfo.context.state,\n      loaderData: {\n        ...loaderData\n      }\n    };\n    let initialMatches = matchRoutes(routes, window.location, window.__reactRouterContext?.basename);\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, ssrInfo.context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    unstable_getContext,\n    hydrationData,\n    mapRouteProperties,\n    future: {\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\n    },\n    dataStrategy: getSingleFetchDataStrategy(ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.basename, () => router2),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.isSpaMode, ssrInfo.context.basename)\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      unstable_getContext: props.unstable_getContext\n    });\n  }\n  let [criticalCss, setCriticalCss] = React2.useState(process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0);\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe(newState => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(router, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */\n    React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(FrameworkContext.Provider, {\n      value: {\n        manifest: ssrInfo.manifest,\n        routeModules: ssrInfo.routeModules,\n        future: ssrInfo.context.future,\n        criticalCss,\n        ssr: ssrInfo.context.ssr,\n        isSpaMode: ssrInfo.context.isSpaMode\n      }\n    }, /* @__PURE__ */React2.createElement(RemixErrorBoundary, {\n      location\n    }, /* @__PURE__ */React2.createElement(RouterProvider2, {\n      router\n    }))), /* @__PURE__ */React2.createElement(React2.Fragment, null))\n  );\n}\nexport { HydratedRouter, RouterProvider2 as RouterProvider };","map":{"version":3,"names":["FrameworkContext","RemixErrorBoundary","RouterProvider","createBrowserHistory","createClientRoutes","createClientRoutesWithHMRRevalidationOptOut","createRouter","decodeViaTurboStream","deserializeErrors","getPatchRoutesOnNavigationFunction","getSingleFetchDataStrategy","invariant","mapRouteProperties","matchRoutes","shouldHydrateRouteLoader","useFogOFWarDiscovery","React","ReactDOM","RouterProvider2","props","createElement","flushSync","React2","ssrInfo","router","initSsrInfo","window","__reactRouterContext","__reactRouterManifest","__reactRouterRouteModules","context","manifest","routeModules","stateDecodingPromise","routerInitialized","createHydratedRouter","_ref","unstable_getContext","Error","localSsrInfo","stream","then","value","state","catch","e","error","routes","ssr","isSpaMode","hydrationData","loaderData","root","hasLoader","initialMatches","location","basename","match","routeId","route","id","manifestRoute","HydrateFallback","errors","router2","history","future","unstable_middleware","dataStrategy","patchRoutesOnNavigation","initialized","initialize","createRoutesForHMR","__reactRouterDataRouter","HydratedRouter","criticalCss","setCriticalCss","useState","process","env","NODE_ENV","__reactRouterClearCriticalCss","setLocation","useLayoutEffect","subscribe","newState","Fragment","Provider"],"sources":["C:/Users/shreya/Videos/clgElection/node_modules/react-router/dist/development/dom-export.mjs"],"sourcesContent":["/**\r\n * react-router v7.4.0\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\r\nimport {\r\n  FrameworkContext,\r\n  RemixErrorBoundary,\r\n  RouterProvider,\r\n  createBrowserHistory,\r\n  createClientRoutes,\r\n  createClientRoutesWithHMRRevalidationOptOut,\r\n  createRouter,\r\n  decodeViaTurboStream,\r\n  deserializeErrors,\r\n  getPatchRoutesOnNavigationFunction,\r\n  getSingleFetchDataStrategy,\r\n  invariant,\r\n  mapRouteProperties,\r\n  matchRoutes,\r\n  shouldHydrateRouteLoader,\r\n  useFogOFWarDiscovery\r\n} from \"./chunk-GNGMS2XR.mjs\";\r\n\r\n// lib/dom-export/dom-router-provider.tsx\r\nimport * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nfunction RouterProvider2(props) {\r\n  return /* @__PURE__ */ React.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\r\n}\r\n\r\n// lib/dom-export/hydrated-router.tsx\r\nimport * as React2 from \"react\";\r\nvar ssrInfo = null;\r\nvar router = null;\r\nfunction initSsrInfo() {\r\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\r\n    ssrInfo = {\r\n      context: window.__reactRouterContext,\r\n      manifest: window.__reactRouterManifest,\r\n      routeModules: window.__reactRouterRouteModules,\r\n      stateDecodingPromise: void 0,\r\n      router: void 0,\r\n      routerInitialized: false\r\n    };\r\n  }\r\n}\r\nfunction createHydratedRouter({\r\n  unstable_getContext\r\n}) {\r\n  initSsrInfo();\r\n  if (!ssrInfo) {\r\n    throw new Error(\r\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\r\n    );\r\n  }\r\n  let localSsrInfo = ssrInfo;\r\n  if (!ssrInfo.stateDecodingPromise) {\r\n    let stream = ssrInfo.context.stream;\r\n    invariant(stream, \"No stream found for single fetch decoding\");\r\n    ssrInfo.context.stream = void 0;\r\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\r\n      ssrInfo.context.state = value.value;\r\n      localSsrInfo.stateDecodingPromise.value = true;\r\n    }).catch((e) => {\r\n      localSsrInfo.stateDecodingPromise.error = e;\r\n    });\r\n  }\r\n  if (ssrInfo.stateDecodingPromise.error) {\r\n    throw ssrInfo.stateDecodingPromise.error;\r\n  }\r\n  if (!ssrInfo.stateDecodingPromise.value) {\r\n    throw ssrInfo.stateDecodingPromise;\r\n  }\r\n  let routes = createClientRoutes(\r\n    ssrInfo.manifest.routes,\r\n    ssrInfo.routeModules,\r\n    ssrInfo.context.state,\r\n    ssrInfo.context.ssr,\r\n    ssrInfo.context.isSpaMode\r\n  );\r\n  let hydrationData = void 0;\r\n  let loaderData = ssrInfo.context.state.loaderData;\r\n  if (ssrInfo.context.isSpaMode) {\r\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\r\n      hydrationData = {\r\n        loaderData: {\r\n          root: loaderData.root\r\n        }\r\n      };\r\n    }\r\n  } else {\r\n    hydrationData = {\r\n      ...ssrInfo.context.state,\r\n      loaderData: { ...loaderData }\r\n    };\r\n    let initialMatches = matchRoutes(\r\n      routes,\r\n      window.location,\r\n      window.__reactRouterContext?.basename\r\n    );\r\n    if (initialMatches) {\r\n      for (let match of initialMatches) {\r\n        let routeId = match.route.id;\r\n        let route = ssrInfo.routeModules[routeId];\r\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\r\n        if (route && manifestRoute && shouldHydrateRouteLoader(\r\n          manifestRoute,\r\n          route,\r\n          ssrInfo.context.isSpaMode\r\n        ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\r\n          delete hydrationData.loaderData[routeId];\r\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\r\n          hydrationData.loaderData[routeId] = null;\r\n        }\r\n      }\r\n    }\r\n    if (hydrationData && hydrationData.errors) {\r\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\r\n    }\r\n  }\r\n  let router2 = createRouter({\r\n    routes,\r\n    history: createBrowserHistory(),\r\n    basename: ssrInfo.context.basename,\r\n    unstable_getContext,\r\n    hydrationData,\r\n    mapRouteProperties,\r\n    future: {\r\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\r\n    },\r\n    dataStrategy: getSingleFetchDataStrategy(\r\n      ssrInfo.manifest,\r\n      ssrInfo.routeModules,\r\n      ssrInfo.context.ssr,\r\n      ssrInfo.context.basename,\r\n      () => router2\r\n    ),\r\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\r\n      ssrInfo.manifest,\r\n      ssrInfo.routeModules,\r\n      ssrInfo.context.ssr,\r\n      ssrInfo.context.isSpaMode,\r\n      ssrInfo.context.basename\r\n    )\r\n  });\r\n  ssrInfo.router = router2;\r\n  if (router2.state.initialized) {\r\n    ssrInfo.routerInitialized = true;\r\n    router2.initialize();\r\n  }\r\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\r\n  createClientRoutesWithHMRRevalidationOptOut;\r\n  window.__reactRouterDataRouter = router2;\r\n  return router2;\r\n}\r\nfunction HydratedRouter(props) {\r\n  if (!router) {\r\n    router = createHydratedRouter({\r\n      unstable_getContext: props.unstable_getContext\r\n    });\r\n  }\r\n  let [criticalCss, setCriticalCss] = React2.useState(\r\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\r\n  );\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    if (ssrInfo) {\r\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\r\n    }\r\n  }\r\n  let [location, setLocation] = React2.useState(router.state.location);\r\n  React2.useLayoutEffect(() => {\r\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\r\n      ssrInfo.routerInitialized = true;\r\n      ssrInfo.router.initialize();\r\n    }\r\n  }, []);\r\n  React2.useLayoutEffect(() => {\r\n    if (ssrInfo && ssrInfo.router) {\r\n      return ssrInfo.router.subscribe((newState) => {\r\n        if (newState.location !== location) {\r\n          setLocation(newState.location);\r\n        }\r\n      });\r\n    }\r\n  }, [location]);\r\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\r\n  useFogOFWarDiscovery(\r\n    router,\r\n    ssrInfo.manifest,\r\n    ssrInfo.routeModules,\r\n    ssrInfo.context.ssr,\r\n    ssrInfo.context.isSpaMode\r\n  );\r\n  return (\r\n    // This fragment is important to ensure we match the <ServerRouter> JSX\r\n    // structure so that useId values hydrate correctly\r\n    /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\r\n      FrameworkContext.Provider,\r\n      {\r\n        value: {\r\n          manifest: ssrInfo.manifest,\r\n          routeModules: ssrInfo.routeModules,\r\n          future: ssrInfo.context.future,\r\n          criticalCss,\r\n          ssr: ssrInfo.context.ssr,\r\n          isSpaMode: ssrInfo.context.isSpaMode\r\n        }\r\n      },\r\n      /* @__PURE__ */ React2.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React2.createElement(RouterProvider2, { router }))\r\n    ), /* @__PURE__ */ React2.createElement(React2.Fragment, null))\r\n  );\r\n}\r\nexport {\r\n  HydratedRouter,\r\n  RouterProvider2 as RouterProvider\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}